1. Who checked out the book 'The Hobbitâ€™?
sql:
SELECT m.name FROM checkout_item AS c, member AS m, book AS b WHERE b.title = 'The Hobbit' AND b.id = c.book_id AND c.member_id = m.id;

SELECT m.name FROM book b left join  checkout_item c on b.id = c.book_id left join member m on m.id = c.member_id WHERE b.title = 'The Hobbit';
answer:
Anand Beck

2. How many people have not checked out anything?
sql:
SELECT COUNT(*) AS count FROM member WHERE id NOT IN (SELECT member_id FROM checkout_item);
answer:
37
3. What books and movies aren't checked out?
sql:
SELECT title FROM book WHERE id NOT IN (SELECT book_id FROM checkout_item) UNION
SELECT title FROM movie WHERE id NOT IN (SELECT movie_id FROM checkout_item);
answer:
null
4. Add the book 'The Pragmatic Programmer', and add yourself as a member. Check out 'The Pragmatic Programmer'. Use your query from question 1 to verify that you have checked it out. Also, provide the SQL used to update the database.
sql:
INSERT INTO book(title) VALUES ('The Pragmatic Programmer');
INSERT INTO member(name) VALUES ('Lisheng Zi');
INSERT INTO checkout_item(member_id, book_id) VALUES((SELECT id FROM member WHERE name = 'Lisheng Zi'), (SELECT id FROM book WHERE title = 'The Pragmatic Programmer'));

SELECT m.name FROM checkout_item AS c, member AS m, book AS b WHERE b.title = 'The Pragmatic Programmer' AND b.id = c.book_id AND c.member_id = m.id;

answer:
Lisheng Zi

5. Who has checked out more than 1 item?
Tip: Research the GROUP BY syntax.
sql:
SELECT name FROM checkout_item c LEFT JOIN member m on c.member_id = m.id GROUP BY name HAVING COUNT(*) > 1;
answer:
Anand Beck
Frank Smith